#!/usr/bin/env bash

APP="a_math" # name of your release

BUILD_HOST="amath.morphism.io" # host where to build the release
BUILD_USER="root" # local user at build host
BUILD_AT="/tmp/edeliver/amath/builds" # build directory on build host

PRODUCTION_HOSTS="amath.morphism.io" # deploy / production hosts separated by space
PRODUCTION_USER="root" # local user at deploy hosts
DELIVER_TO="/home/web" # deploy directory on production hosts

TARGET_MIX_ENV="prod"
AUTO_VERSION=git-revision+branch+build-date

# If you are deploying to a fresh machine, uncomment the block below.

# This supposes to be running only for the first time.
# Comment out after the first run has done.
pre_erlang_get_and_update_deps() {

  local _build_deps_script=".deliver/build_deps.sh"
  status "Started installing build dependencies"
  scp "$_build_deps_script" "$BUILD_USER@$BUILD_HOST:$BUILD_AT/build_deps.sh"
  __sync_remote "
    cd $BUILD_AT
    bash build_deps.sh
  "

  local _local_secret_config_file="config/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    status "Copying '$_local_secret_config_file' file to build host"
    scp "$_local_secret_config_file" "$BUILD_USER@$BUILD_HOST:$BUILD_AT/config/prod.secret.exs"
  fi

  local _local_elm_file="assets/js/elm.js"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    status "Copying '$_local_elm_file' file to build host"
    scp "$_local_elm_file" "$BUILD_USER@$BUILD_HOST:$BUILD_AT/assets/js/elm.js"
  fi
}

pre_erlang_clean_compile() {
  status "Installing NPM dependencies"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT/assets'
    npm install
  "

  status "Building static files"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT'
    mkdir -p priv/static

    cd '$BUILD_AT/assets'
    npm run deploy
  "

  status "Running phoenix.digest"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT'
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest
  "
}
